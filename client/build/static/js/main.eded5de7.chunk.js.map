{"version":3,"sources":["components/MovieCard/MovieCard.js","components/Home/Home.js","components/UserPanel/UserPanel.js","App.js","index.js"],"names":["MovieCard","props","useState","undefined","btn","setBtn","save","event","preventDefault","data","axios","url","method","movie","then","res","status","console","log","alert","catch","err","remove","areFav","left","movies","slice","rendered","right","setRendered","setMovies","concat","useEffect","i","length","movie1","movie2","JSON","stringify","isFavourite","onSubmit","className","type","src","poster_path","alt","title","release_date","vote_average","overview","Home","name","setName","showFav","setShowFav","getPopular","a","fetch","json","results","submit","showFavourites","onClick","moviesToRender","filter","map","id","buttons","htmlFor","placeholder","value","onChange","e","target","UserForm","source","email","setEmail","password","setPassword","setUserName","maxLength","autoFocus","required","userData","setData","UserPanel","isOpen","setIsOpen","showLogin","setShowLogin","showRegister","setShowRegister","handlePanel","renderForm","shouldRender","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eded5de7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './MovieCard.css';\n\nfunction MovieCard(props) {\n    const [btn, setBtn] = useState(undefined);\n\n    const save = (event) => {\n        event.preventDefault();\n\n        if (props.data === null) {\n            alert(\"You have to be logged in to use this feature\");\n            return;\n        }\n\n        axios({\n            url: '/save',\n            method: 'POST',\n            data: { movie: props.movie }\n        })\n            .then((res) => {\n                if (res.status === 403) {\n                    alert(\"You need to be logged in to use this feature\");\n                    return;\n                }\n\n                console.log(res.data);\n            })\n            .catch((err) => console.log(err));\n    };\n\n    const remove = (event) => {\n        event.preventDefault();\n\n        axios({\n            url: '/remove',\n            method: 'POST',\n            data: { movie: props.movie }\n        }).then((res) => {\n                if (res.status === 403) {\n                    console.log(\"ERROR - Tried to remove from favourites without being logged in\");\n                    return;\n                }\n\n                if(props.areFav) {\n                    let left = props.movies.slice(0, props.rendered);\n                    let right = props.movies.slice(props.rendered + 1);\n\n                    props.setRendered((0 > props.rendered - 1) ? 0 : props.rendered - 1);\n                    props.setMovies(left.concat(right));\n                }\n            })\n            .catch(() => console.log(\"An error occured\"));\n    };\n\n    useEffect(() => {\n        const checkIfFavourite = (movie) => {\n            const compareMovies = (movie1, movie2) => {\n                return JSON.stringify(movie1) === JSON.stringify(movie2);\n            }\n            return(\n                axios({\n                    url: '/favourites',\n                    method: 'GET'\n                }).then(res => {\n                    for (let i = 0; i < res.data.length; ++i) {\n                        if (compareMovies(res.data[i], movie))    \n                            return true;\n                    }\n    \n                    return false;\n                })\n                .catch(err => console.log(err))\n            );\n        }\n\n        checkIfFavourite(props.movie).then(isFavourite => {\n            if (isFavourite)\n                setBtn(<form onSubmit={remove}>\n                    <button className=\"button\" type=\"submit\">Remove from favourites</button>\n                </form>);\n            else\n                setBtn(<form onSubmit={save}>\n                    <button className=\"button\" type=\"submit\">Add to favourites</button>\n                </form>);\n        });\n    });\n\n    return (\n        <div className=\"card\">\n            <img \n                className=\"card-image\"\n                src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${props.movie.poster_path}`}\n                alt={props.movie.title + ' poster'} \n            />\n            <div className=\"card-content\">\n                <h3 className=\"card-title\">{props.movie.title}</h3>\n                <p><small>RELEASE DATE: {props.movie.release_date}</small></p>\n                <p><small>RATING: {props.movie.vote_average}</small></p>\n                <p className=\"card-desc\">{props.movie.overview}</p>\n                {btn}\n            </div>\n        </div>\n    );\n}\n\nexport default MovieCard;","import React, { useState, useEffect } from 'react'; \nimport axios from 'axios';\nimport MovieCard from '../MovieCard/MovieCard';\nimport './Home.css';\n\nfunction Home({data}) {\n    const [name, setName] = useState(\"\");\n    const [movies, setMovies] = useState([]);\n    const [rendered, setRendered] = useState(0);\n    const [showFav, setShowFav] = useState(false);\n    \n\n    useEffect(() => {\n        const getPopular = async () => {\n            const url = \"https://api.themoviedb.org/3/movie/popular?api_key=200341856882729a54726055a4af051e&language=en-US\";\n\n            try {\n                const res = await fetch(url);\n                const data = await res.json();\n    \n                setMovies(data.results);\n                setShowFav(false);\n                setRendered(0);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n\n        if (movies.length === 0)\n            getPopular();\n    });\n\n    const submit = async (event) => {\n        event.preventDefault();\n        \n        if (name === \"\") {\n            alert(\"No movie name found\");\n            return;\n        }\n\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=200341856882729a54726055a4af051e&language=en-US&query=${name}&page=1&include_adult=false`;\n\n        try {\n            const res = await fetch(url);\n            const data = await res.json();\n\n            setMovies(data.results);\n            setName(\"\");\n            setRendered(0);\n            setShowFav(false);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const showFavourites = (data !== null) ? \n        <button \n            className=\"button\"\n            onClick={() => {\n                axios({\n                    url: '/favourites',\n                    method: 'GET'\n                }).then(res => {\n                    if (res.data.length === 0) {\n                        alert(\"No favourite movies found\");\n                    } else {\n                        setMovies(res.data);\n                        setShowFav(true);\n                        setRendered(0);\n                    }\n                });\n            }}>Show Favourites</button> :\n        undefined;\n\n    const moviesToRender = movies.filter(movie => movie.poster_path)\n                         .map(movie => (\n                            <MovieCard \n                                movie={movie} \n                                areFav={showFav}\n                                movies={movies}\n                                data={data}\n                                rendered={rendered}\n                                setRendered={setRendered}\n                                setMovies={setMovies}\n                                key={movie.id} />));\n\n    let buttons = [];\n    if (moviesToRender.length !== 0) {\n        if (rendered !== 0)\n            buttons[0] = (<button className=\"button\" onClick={() => setRendered(rendered-1)}>Back</button>);\n\n        if (rendered !== moviesToRender.length - 1)\n            buttons[1] = (<button className=\"button\" onClick={() => setRendered(rendered+1)}>Next</button>);\n    }\n\n    return (\n        <div id=\"home-content\">\n            <div id=\"search\">\n                <form id=\"find-movie\" onSubmit={submit}>\n                    <label className=\"label\" htmlFor=\"search\">Movie Name</label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"search\"\n                        placeholder=\"Enter movie name\"\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                    />\n                    <button className=\"button\" type=\"submit\">Search!</button>\n                </form>\n                {showFavourites}\n            </div>\n            <div id=\"movies\">\n                {moviesToRender[rendered]}\n                <div id=\"buttons\">\n                    {buttons}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport './UserPanel.css';\n\nfunction UserForm(props) {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const submit = (source) => (event) => {\n      event.preventDefault();\n  \n      const userData = {\n        name: name,\n        email: email,\n        password: password\n      };\n  \n      axios({\n        url: `/${source}`,\n        method: 'POST',\n        data: userData\n      })\n        .then((res) => {\n          setName(\"\");\n          setEmail(\"\");\n          setPassword(\"\");\n\n          if (res.status === 404)\n            alert(res.data);\n\n          if (res.status === 200) {\n            if (source === \"login\")\n              props.setData(res.data);\n            else\n              alert(res.data);\n          }\n        })\n        .catch((err) => {\n          alert(\"Sorry, something went wrong\");\n          console.log(err);\n        });\n    };\n    \n    const setUserName = (props.source === \"register\") ?\n      (<p>\n        <label htmlFor=\"username\">Username:</label> \n        <input \n          type=\"text\"\n          name=\"username\"  \n          placeholder=\"Enter username\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          maxLength=\"254\" \n          autoFocus\n          required />\n      </p>) : undefined;\n\n    return (\n      <form id={props.source} onSubmit={submit(props.source)}>\n        {setUserName}\n        <p>\n            <label htmlFor=\"email\">Email:</label> \n            <input \n              type=\"text\"\n              name=\"email\"  \n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              maxLength=\"254\" \n              required />\n        </p>\n        <p>\n            <label htmlFor=\"password\">Password:</label>\n            <input \n              type=\"password\" \n              name=\"password\" \n              placeholder=\"Enter password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required/>\n        </p>\n        <button type=\"submit\">log in</button>\n      </form>\n    );\n  \n}\n\nfunction UserPanel({data, setData}) {\n    const [isOpen, setIsOpen] = useState(false);\n    const [showLogin, setShowLogin] = useState(false);\n    const [showRegister, setShowRegister] = useState(false);\n\n    console.log(data);\n\n    const handlePanel = () => {\n      setIsOpen(!isOpen);\n    };\n\n    const logout = () => {\n      axios({\n          url: '/logout',\n          method: 'POST'\n        })\n          .then((res) => {\n            if (res.status === 403) {\n              alert(res.data);\n              return;\n            }\n\n            setData(null);\n            alert(res.data);\n          });\n    }\n\n    if (data !== null) {\n      return (\n        <div id=\"panel\">\n          <i className={\"far fa-user-circle fa-3x\" + (isOpen ? \" active\" : \"\")}\n             id=\"opener\"\n             onClick={handlePanel}\n          ></i>\n          <div className={isOpen ? \"active\" : \"\"} id=\"box\">\n            <p>Hello, {data.name}</p>\n            <div className=\"wrapper\" onClick={logout}>Logout</div>\n          </div>\n        </div>\n      );\n    }\n\n    const renderForm = (shouldRender, source) => {\n      if (shouldRender)\n        return <UserForm id={source} source={source} setData={setData} />;\n      else\n        return undefined;\n    };\n\n    return (\n        <div id=\"panel\">\n            <i className={\"far fa-user-circle fa-3x\" + (isOpen ? \" active\" : \"\")}\n             id=\"opener\"\n             onClick={handlePanel}\n            ></i>\n            <div className={isOpen ? \"active\" : \"\"} id=\"box\">\n              <div \n                className=\"wrapper\" \n                onClick={() => setShowLogin(!showLogin)}>\n                Login\n              </div>\n              { renderForm(showLogin, \"login\") }\n              <div \n                className=\"wrapper\" \n                onClick={() => setShowRegister(!showRegister)}>\n                Register\n              </div>\n              { renderForm(showRegister, \"register\") }\n            </div>\n        </div>\n    );\n}\n\nexport default UserPanel;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Home from './components/Home/Home';\nimport UserPanel from './components/UserPanel/UserPanel';\nimport \"./App.css\";\n\n\nfunction App() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const getUser = () => {\n      axios({\n        url: '/user',\n        method: 'GET'\n      }).then(res => {\n        if (res.data !== \"\")\n          setData(res.data);\n      });\n    }\n\n    getUser();\n  }, []);\n\n  return (\n    <div id=\"container\">\n      <header className=\"title\" id=\"mainHeader\">\n        <h1>Movie Picker</h1>\n      </header>\n      <UserPanel \n        id=\"userPanel\" \n        data={data} \n        setData={setData} />\n      <Home data={data} />\n      <footer className=\"small\" id=\"mainFooter\">Jakub Korzeniewski &copy; 2021</footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <div id=\"app\">\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}